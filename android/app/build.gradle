def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 27

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "scott.flutterapp"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            //miaomiao_keystore.jks文件最好放在项目app目录下
            storeFile file("flutter.jks")
            storePassword "mama199002"
            keyAlias "flutter"
            keyPassword "mama199002"
        }
        release {
            //miaomiao_keystore.jks文件最好放在项目app目录下
            storeFile file("flutter.jks")
            storePassword "mama199002"
            keyAlias "flutter"
            keyPassword "mama199002"
        }
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
////            storeFile file("/用户/NN/桌面/NN/Fluttre/flutter.jks")
////            storePassword "mama199002"
////            keyAlias "flutter"
////            keyPassword "mama199002"
//        }
//
//    }

    buildTypes {
        debug {
            // 服务器配置
//            buildConfigField "String", "SERVERHEAD", "\"http://110.11.11.00/miaomiao/\""
//            //是否混淆
//            minifyEnabled false
//            zipAlignEnabled true
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

        }
        release {
//            // 正式服务器
//            buildConfigField "String", "SERVERHEAD", "\"http://miaomiao.com/miaomiao/\""
//            //混淆
//            minifyEnabled true
//            zipAlignEnabled true//内存对齐
//            // 移除无用的resource文件
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
